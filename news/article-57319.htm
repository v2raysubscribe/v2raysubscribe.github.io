<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://v2raysubscribe.github.io/news/article-57319.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Java 树形结构数据生成导出excel文件</title>
        <meta name="description" content="效果    用法 String jsonStr = "{\"name\":\"aaa\",\"children\":[{\"name\":\"bbb\",\"children\":[{\"name\"" />
        <link rel="icon" href="/assets/website/img/v2raysubscribe/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Subscribe免费梯子节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raysubscribe.github.io/news/article-57319.htm" />
    <meta property="og:site_name" content="V2ray Subscribe免费梯子节点分享官网" />
    <meta property="og:title" content="Java 树形结构数据生成导出excel文件" />
    <meta property="og:image" content="https://v2raysubscribe.github.io/uploads/20241210/bee850a451a58a41feb235bce091be6a.webp" />
        <meta property="og:release_date" content="2025-02-16T07:19:02" />
    <meta property="og:updated_time" content="2025-02-16T07:19:02" />
        <meta property="og:description" content="效果    用法 String jsonStr = "{\"name\":\"aaa\",\"children\":[{\"name\":\"bbb\",\"children\":[{\"name\"" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java 树形结构数据生成导出excel文件">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://oss.maxcdn.com">

    <!-- Bootstrap-->
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/bootstrap.min.css">
    <!-- Google fonts - Open Sans-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:400,300,700,800,400italic">
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/pe-icon-7-stroke.css">
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/helper.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/style.default.css" id="theme-stylesheet">
    <!-- owl carousel-->
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/owl.carousel.css">
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/owl.theme.css">
    <!-- plugins-->
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/simpletextrotator">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/website/css/v2raysubscribe/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-31NDSG4LH3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-31NDSG4LH3');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div id="all">
            <!-- navbar-->
    <header class="header">
        <div role="navigation" class="navbar navbar-default navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <a href="/" class="navbar-brand">
                                                <span>V2ray Subscribe</span>
                                            </a>
                    <div class="navbar-buttons">
                        <button type="button" data-toggle="collapse" data-target=".navbar-collapse" class="navbar-toggle navbar-btn">Menu<i class="pe-7s-menu"></i></button>
                    </div>
                </div>
                <div id="navigation" class="collapse navbar-collapse navbar-right">
                    <ul class="nav navbar-nav">
                                                <li><a href="/">首页</a></li>
                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                <li><a href="/client.htm">客户端</a></li>
                                                <li><a href="/news/">新闻资讯</a></li>
                                            </ul>
                </div>
            </div>
        </div>
    </header>
        <section id="intro" class="text-intro no-padding-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <h1>Java 树形结构数据生成导出excel文件</h1>
                        <p class="weight-300">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
        </section>
        <!--   *** FEATURES ***-->
        <section id="features" class="section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <ol> <li> <h3>效果<br /><img fetchpriority="high" decoding="async" alt="" height="484" src="http://img.555519.xyz/uploads/20230118/741dce55a5c2c9e146a1c463bdee5d5d.jpg"><br /> </h3> </li> <li> <h3>用法</h3> <pre><code class="language-java">String jsonStr = "{\"name\":\"aaa\",\"children\":[{\"name\":\"bbb\",\"children\":[{\"name\":\"eee\"},{\"name\":\"fff\",\"children\":[{\"name\":\"iii\"},{\"name\":\"jjj\",\"children\":[{\"name\":\"qqq\"},{\"name\":\"ttt\"}]}]},{\"name\":\"www\"}]},{\"name\":\"ccc\",\"children\":[{\"name\":\"ggg\"},{\"name\":\"hhh\",\"children\":[{\"name\":\"kkk\",\"children\":[{\"name\":\"ttt\"},{\"name\":\"mmm\"}]},{\"name\":\"uuu\"}]},{\"name\":\"ooo\"}]},{\"name\":\"ddd\",\"children\":[{\"name\":\"ggg\"},{\"name\":\"hhh\",\"children\":[{\"name\":\"kkk\"},{\"name\":\"uuu\"}]}]}]}"; Map tree = JSONObject.parseObject(jsonStr, Map.class); tree2Excel(tree, "E:\\" + System.currentTimeMillis() + ".xls", "name", "children");</code></pre> </li> <li> <h3>源码<br /> &nbsp;</h3> <pre><code class="language-java">package pers.xxx.demo.tree2excel;  import org.apache.poi.hssf.usermodel.HSSFWorkbook; import org.apache.poi.ss.usermodel.*; import org.apache.poi.xssf.usermodel.XSSFWorkbook;  import java.io.Closeable; import java.io.File; import java.io.FileOutputStream; import java.io.IOException; import java.util.List; import java.util.Map;  /**  * 树形结构数据导出excel工具  * &lt;p&gt;  * Created by lzy on 2021/2/24 14:09  */ @SuppressWarnings("ALL") public class Tree2ExcelUtil {      /**      * 树形结构数据生成excel文件      *      * @param tree     树形数据      * @param filePath 文件路径      * @return      */     public static boolean tree2Excel(Map tree, String filePath) {         return tree2Excel(tree, filePath, null, null);     }      /**      * 树形结构数据生成excel文件      *      * @param tree         树形数据      * @param filePath     文件路径      * @param lableName    标签Key名称      * @param childrenName 子节点Key名称      * @return      */     public static boolean tree2Excel(Map tree, String filePath, String lableName, String childrenName) {         if (isBlank(filePath)) {             System.err.println("文件名称不能为空");             return false;         }         try {             doSame(tree, lableName, childrenName);             createExcel(filePath, tree);             return true;         } catch (IOException e) {             e.printStackTrace();         }         return false;     }      /**      * 树形结构数据生成Workbook对象      *      * @param tree    树形数据      * @param fileSuf 文件后缀，xls/xlsx      * @return      */     public static Workbook tree2Worbook(Map tree, String fileSuf) {         return tree2Worbook(tree, fileSuf, null, null);     }      /**      * 树形结构数据生成Workbook对象      *      * @param tree         树形数据      * @param fileSuf      文件后缀，xls/xlsx      * @param lableName    标签Key名称      * @param childrenName 子节点Key名称      * @return      */     public static Workbook tree2Worbook(Map tree, String fileSuf, String lableName, String childrenName) {         if (isBlank(fileSuf)) {             System.err.println("必须指定文件后缀");             return null;         }         try {             doSame(tree, lableName, childrenName);             return procesData(tree, fileSuf);         } catch (Exception e) {             e.printStackTrace();         }         return null;     }       //具体实现      /**      * 标识最大列      */     private static int maxCol = 0;     private static String lableName = "lable";     private static String childrenName = "children";     private static final String COL = "col";     private static final String ROW = "row";     private static final String ROW_OFT = "rowOft";     private static final String ROW_SIZE = "rowSize";       private static void doSame(Map tree, String lableName, String childrenName) {         if (!isBlank(lableName)) {             Tree2ExcelUtil.lableName = lableName;         }         if (!isBlank(childrenName)) {             Tree2ExcelUtil.childrenName = childrenName;         }         coreAlgoCol(tree, 1);         coreAlgoRow(tree);     }      /**      * 主要算法，计算列的坐标，计算每个节点所占行      *      * @param tree  数据      * @param col   递增的列      * @param trees 把高级别向下传递计算递增的行高      */     private static void coreAlgoCol(Map tree, int col, Map... trees) {         tree.put(COL, col);         Object childrenObj = tree.get(childrenName);         if (childrenObj != null) {             List&lt;Map&gt; children = (List&lt;Map&gt;) childrenObj;             if (children.size() &gt; 0) {                 int size = children.size() * 2 - 1;                 tree.put(ROW_SIZE, size);                 int len = trees != null ? trees.length + 1 : 1;                 Map[] arrData = new Map[len];                  if (trees != null &amp;&amp; trees.length &gt; 0) {                     for (int i = 0; i &lt; trees.length; i++) {                         Map tree1 = trees[i];                         tree1.put(ROW_SIZE, toInt(tree1.get(ROW_SIZE), 1) + size - 1);                         arrData[i] = tree1;                     }                 }                 arrData[len - 1] = tree;                 for (Map tree1 : children) {                     int newCol = col + 1;                     if (newCol &gt; maxCol) {                         maxCol = newCol;                     }                     coreAlgoCol(tree1, newCol, arrData);                 }             }         }     }      /**      * 主要算法，计算行的坐标      *      * @param tree      */     private static void coreAlgoRow(Map tree) {         if (toInt(tree.get(ROW)) == 0) {             tree.put(ROW, Math.round(toInt(tree.get(ROW_SIZE), 1) / 2.0f));         }         Object childrenObj = tree.get(childrenName);         if (childrenObj != null) {             List&lt;Map&gt; children = (List&lt;Map&gt;) childrenObj;             if (children.size() &gt; 0) {                 int tempOft = toInt(tree.get(ROW_OFT));                 for (Map tree1 : children) {                     int rowSize = toInt(tree1.get(ROW_SIZE), 1);                     tree1.put(ROW_OFT, tempOft);                     tree1.put(ROW, tempOft + Math.round(rowSize / 2.0f));                     tempOft += rowSize + 1;                     coreAlgoRow(tree1);                 }             }         }     }      /**      * 创建excel文件      *      * @param filePath 文件路径，具体路径到文件名      * @param tree     数据      * @throws IOException      */     private static void createExcel(String filePath, Map tree) throws IOException {         File file = new File(filePath);         boolean bfile = file.createNewFile();         // 复制模板到新文件         if (bfile) {             Workbook wk = procesData(tree, filePath);             if (wk != null) {                 FileOutputStream fos = null;                 try {                     fos = new FileOutputStream(file);                     wk.write(fos);                      fos.flush();                 } finally {                     closeStream(fos);                     wk.close();                 }             }         }     }       /**      * 处理excel数据      *      * @param tree 数据      * @return 工作表对象      */     private static Workbook procesData(Map tree, String fileName) {          Workbook wk = null;         if (fileName.endsWith("xls")) {             wk = new HSSFWorkbook();         }         if (fileName.endsWith("xlsx")) {             wk = new XSSFWorkbook();         }         if (wk == null) {             System.err.println("文件名称不正确");             return null;         }          //创建一个sheet页         Sheet sheet = wk.createSheet("Sheet1");          int colSize = maxCol * 2 + 2;         int rowSize = toInt(tree.get(ROW_SIZE), 1);         for (int i = 0; i &lt;= rowSize; i++) {             Row row = sheet.createRow(i);             for (int j = 0; j &lt;= colSize; j++) {                 row.createCell(j);             }         }         //配置单元格背景色         CellStyle style1 = wk.createCellStyle();         style1.setFillForegroundColor(IndexedColors.LIGHT_GREEN.getIndex());         style1.setFillPattern(FillPatternType.SOLID_FOREGROUND);         CellStyle style2 = wk.createCellStyle();         style2.setFillForegroundColor(IndexedColors.LIGHT_YELLOW.getIndex());         style2.setFillPattern(FillPatternType.SOLID_FOREGROUND);          dealCell(sheet, tree, style1, style2);          return wk;     }      /**      * 根据计算好的坐标填充每一个单元格      *      * @param sheet  #      * @param tree   数据      * @param style1 单元格格式      * @param style2 单元格格式      */     private static void dealCell(Sheet sheet, Map tree, CellStyle style1, CellStyle style2) {         Row row = sheet.getRow(toInt(tree.get(ROW)));         int oftCol = (toInt(tree.get(COL)) - 1) * 2 + 1;         Cell cell = row.getCell(oftCol);         cell.setCellStyle(style1);         cell.setCellValue(String.valueOf(tree.get(lableName)));          sheet.setColumnWidth(oftCol, 256 * 20);          Object childrenObj = tree.get(childrenName);         if (childrenObj != null) {             List&lt;Map&gt; children = (List&lt;Map&gt;) childrenObj;             if (children.size() &gt; 0) {                 int size = children.size();                  int startRow = toInt(children.get(0).get(ROW));                 int endRow = toInt(children.get(size - 1).get(ROW));                 int col = oftCol + 1;                 sheet.setColumnWidth(col, 256);                 for (; startRow &lt;= endRow; startRow++) {                     sheet.getRow(startRow).getCell(col).setCellStyle(style2);                 }                  for (Map child : children) {                     dealCell(sheet, child, style1, style2);                 }             }         }     }      private static int toInt(Object val) {         return toInt(val, 0);     }      private static int toInt(Object val, Integer defVal) {         try {             return Integer.parseInt(String.valueOf(val));         } catch (NumberFormatException ignored) {         }         return defVal;     }      private static boolean isBlank(String str) {         return str == null || str.trim().length() == 0;     }      /**      * 关闭流      *      * @param closeables 不定长数组 流对象      */     public static void closeStream(Closeable... closeables) {         for (Closeable closeable : closeables) {             if (closeable != null) {                 try {                     closeable.close();                 } catch (IOException e) {                     e.printStackTrace();                 }             }         }     }  }</code></pre> </li> </ol> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-56759.htm">json字符串转java实体类及属性对应中的猫腻详解</a></p>
                                        <p>下一个：<a href="/news/article-57320.htm">北京看小动物的地方（北京看动物去哪）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-16-free-subscribe-node.htm" title="1月16日→18.7M/S|免费节点V2ray/Clash/SSR/Shadowrocket2025年最新订阅链接地址">1月16日→18.7M/S|免费节点V2ray/Clash/SSR/Shadowrocket2025年最新订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-1-free-node-subscribe-links.htm" title="1月1日→21M/S|2025年最新免费节点V2ray Subscribe订阅链接地址">1月1日→21M/S|2025年最新免费节点V2ray Subscribe订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-49754.htm" title="动物疫苗一般在哪里*** 动物疫苗一般在哪里***的">动物疫苗一般在哪里*** 动物疫苗一般在哪里***的</a></li>
                        <li class="py-2"><a href="/news/article-25977.htm" title="长期上门收购各种宠物犬株洲（株洲哪里有收狗的）">长期上门收购各种宠物犬株洲（株洲哪里有收狗的）</a></li>
                        <li class="py-2"><a href="/news/article-31122.htm" title="狗粮品牌排行榜有哪些品牌的（狗粮排行榜简析十大狗粮品牌）">狗粮品牌排行榜有哪些品牌的（狗粮排行榜简析十大狗粮品牌）</a></li>
                        <li class="py-2"><a href="/news/article-41792.htm" title="mysql 独立schema_详解MySQL中的数据类型和schema优化">mysql 独立schema_详解MySQL中的数据类型和schema优化</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-2-free-node-subscribe.htm" title="2月2日→20.3M/S|免费节点V2ray/Clash/SSR/Shadowrocket2025年最新订阅链接地址">2月2日→20.3M/S|免费节点V2ray/Clash/SSR/Shadowrocket2025年最新订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-40309.htm" title="宠物粮食排行榜前十名品牌图片（宠物粮食排行榜前十名品牌图片大全）">宠物粮食排行榜前十名品牌图片（宠物粮食排行榜前十名品牌图片大全）</a></li>
                        <li class="py-2"><a href="/news/article-32565.htm" title="宠物粮食生产需要什么条件呢 宠物粮食生产需要什么条件呢视频">宠物粮食生产需要什么条件呢 宠物粮食生产需要什么条件呢视频</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-10-free-node-subscribe.htm" title="12月10日→22.3M/S|2024年最新免费节点V2ray Subscribe订阅链接地址">12月10日→22.3M/S|2024年最新免费节点V2ray Subscribe订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">67</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="footer">
            <div class="footer__copyright">
                <div class="container">
                    <div class="row">
                        <div class="col-md-6">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>&copy;2025 Best company</p>
                        </div>
                        <div class="col-md-6">
                            <p class="credit pull-right">
                                <a href="/">V2ray Subscribe免费梯子节点分享官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- Javascript files-->
        <script src="/assets/website/js/frontend/v2raysubscribe/jquery.min.js"></script>
        <script src="/assets/website/js/frontend/v2raysubscribe/bootstrap.min.js"> </script>
        <script src="/assets/website/js/frontend/v2raysubscribe/jquery.cookie.js"> </script>
        <script src="/assets/website/js/frontend/v2raysubscribe/ekko-lightbox.js"></script>
        <script src="/assets/website/js/frontend/v2raysubscribe/jquery.simple-text-rotator.min.js"></script>
        <script src="/assets/website/js/frontend/v2raysubscribe/jquery.scrollTo.min.js"></script>
        <script src="/assets/website/js/frontend/v2raysubscribe/owl.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/v2raysubscribe/front.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </div>
</body>

</html>